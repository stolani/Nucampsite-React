[{"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"12","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"14","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"23","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"24","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":695,"mtime":1612401776959,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611533028056,"results":"28","hashOfConfig":"27"},{"size":542,"mtime":1612997418243,"results":"29","hashOfConfig":"27"},{"size":2043,"mtime":1613609703149,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612489729256,"results":"31","hashOfConfig":"27"},{"size":6670,"mtime":1613683678115,"results":"32","hashOfConfig":"27"},{"size":3372,"mtime":1613682421219,"results":"33","hashOfConfig":"27"},{"size":4473,"mtime":1612918386819,"results":"34","hashOfConfig":"27"},{"size":1913,"mtime":1612483722820,"results":"35","hashOfConfig":"27"},{"size":1736,"mtime":1613683264490,"results":"36","hashOfConfig":"27"},{"size":10594,"mtime":1613522443754,"results":"37","hashOfConfig":"27"},{"size":303,"mtime":1612489761834,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612489755730,"results":"39","hashOfConfig":"27"},{"size":4243,"mtime":1612489745946,"results":"40","hashOfConfig":"27"},{"size":4058,"mtime":1612637287433,"results":"41","hashOfConfig":"27"},{"size":799,"mtime":1613521660635,"results":"42","hashOfConfig":"27"},{"size":570,"mtime":1613614757713,"results":"43","hashOfConfig":"27"},{"size":614,"mtime":1613519763891,"results":"44","hashOfConfig":"27"},{"size":182,"mtime":1613350791865,"results":"45","hashOfConfig":"27"},{"size":523,"mtime":1613608541170,"results":"46","hashOfConfig":"27"},{"size":4122,"mtime":1613614701312,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1613608018422,"results":"48","hashOfConfig":"27"},{"size":166,"mtime":1613521524259,"results":"49","hashOfConfig":"27"},{"size":234,"mtime":1613519854524,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613606407990,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jmb3e1",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["108","109"],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["110","111","112"],"import React, {Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport {Button, Modal, ModalHeader, ModalBody,Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\n\n\n class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n\ntoggleModal() {\n    this.setState({\n        isModalOpen: !this.state.isModalOpen\n    });\n}\n\nhandleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n}\n  render () {\n    return(\n      <div>\n      <Button outline onClick={this.toggleModal}>\n      <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n  </Button>\n  <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                    className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    placeholder=\"Your Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                      required, \n                                      minLength: minLength(2),\n                                      maxLength: maxLength(15)\n                                  }}\n                              />\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                    />\n                            </div>\n                            <Button type=\"submit\" color=\"primary\">\n                                Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n    );\n  }\n\n }\n\n  function RenderCampsite ({campsite}) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n        <Card>\n        <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n          <CardBody>\n              <CardText>{campsite.description}</CardText>\n          </CardBody>\n        </Card>\n        </FadeTransform>\n      </div>\n    );\n  }\n\n  function RenderComments ({comments,postComment, campsiteId}) {\n    if (comments) {\n      return (\n        <div className=\"col-md-5 m-1\">\n          <h4> Comments</h4>\n          <Stagger in>\n                    {\n                      comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', \n                                            { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n <CommentForm campsiteId={campsiteId} postComment={postComment} />\n        </div>\n      );\n    }\n    return <div />;\n  }\n\n  function CampsiteInfo(props) {\n    if (props.campsite) {\n      return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>{props.campsite.name}</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <RenderCampsite campsite={props.campsite} />\n                <RenderComments comments={props.comments} \n                postomment={props.postComment}\n                campsiteId={props.campsite.id}/>\n              \n            </div>\n        </div>\n      );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;\n\n\n  ","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["113","114","115","116","117","118","119"],"import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phoneNum: '',\n      email: '',\n      agree: false,\n      contactType: 'By Phone',\n      feedback: '',\n      touched: {\n        firstName: false,\n        lastName: false,\n        phoneNum: false,\n        email: false\n    }\n    };\n\n    this.handleSubmit = this.handleSubmit.bind (this);\n  }\n  \n  handleSubmit(values) {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    alert(\"Current state is: \" + JSON.stringify(values));\n    this.props.resetFeedbackForm();\n  }\n\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>Contact Us</h2>\n            <hr />\n          </div>\n        </div>\n\n        <div className=\"row row-content align-items-center\">\n          <div className=\"col-sm-4\">\n            <h5>Our Address</h5>\n            <address>\n              1 Nucamp Way<br />\n              Seattle, WA 98001<br />\n              U.S.A.\n            </address>\n          </div>\n          <div className=\"col\">\n            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\">\n              <i className=\"fa fa-phone\" /> 1-206-555-1234\n            </a>\n            <br />\n            <a\n              role=\"button\"\n              className=\"btn btn-link\"\n              href=\"mailto:fakeemail@fakeemail.co\"\n            >\n              <i className=\"fa fa-envelope-o\" /> campsites@nucamp.co\n            </a>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h2>Send us your Feedback</h2>\n            <hr />\n          </div>\n          <div className=\"col-md-10\">\n          <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],["120","121"],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],["122","123"],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",["124"],"import { CAMPSITES } from '../shared/campsites';\nimport * as ActionTypes from './ActionTypes';\n\nexport const Campsites = (state = {\n    isLoading: true,\n    errMess: null,\n    campsites: []\n}, action) => {\nswitch (action.type) {\n    case ActionTypes.ADD_CAMPSITES:\n        return {...state, isLoading: false, errMess: null, campsites: action.payload};\n    case ActionTypes.CAMPSITES_LOADING:\n        return {...state, isLoading: true, errMess: null, campsites: []};\n    case ActionTypes.CAMPSITES_FAILED:\n        return {...state, isLoading: false, errMess: action.payload};\n    default:\n        return state;\n}\n};","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":47,"column":33,"nodeType":"131","endLine":48,"endColumn":62},{"ruleId":"129","severity":1,"message":"132","line":58,"column":33,"nodeType":"131","endLine":66,"endColumn":33},{"ruleId":"129","severity":1,"message":"133","line":81,"column":37,"nodeType":"131","endLine":84,"endColumn":39},{"ruleId":"129","severity":1,"message":"132","line":89,"column":33,"nodeType":"131","endLine":97,"endColumn":39},{"ruleId":"129","severity":1,"message":"132","line":114,"column":37,"nodeType":"131","endLine":122,"endColumn":39},{"ruleId":"129","severity":1,"message":"132","line":139,"column":37,"nodeType":"131","endLine":148,"endColumn":39},{"ruleId":"129","severity":1,"message":"132","line":166,"column":37,"nodeType":"131","endLine":173,"endColumn":39},{"ruleId":"129","severity":1,"message":"134","line":190,"column":45,"nodeType":"131","endLine":194,"endColumn":47},{"ruleId":"129","severity":1,"message":"130","line":200,"column":37,"nodeType":"131","endLine":201,"endColumn":66},{"ruleId":"129","severity":1,"message":"133","line":210,"column":37,"nodeType":"131","endLine":213,"endColumn":39},{"ruleId":"125","replacedBy":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":19},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["143"],["144"],["143"],["144"],"no-unused-vars","'CAMPSITES' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]