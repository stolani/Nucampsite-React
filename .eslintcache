[{"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"12","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"14","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"17","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"23","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"24","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":695,"mtime":1612401776959,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611533028056,"results":"28","hashOfConfig":"27"},{"size":542,"mtime":1612997418243,"results":"29","hashOfConfig":"27"},{"size":2043,"mtime":1613609703149,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612489729256,"results":"31","hashOfConfig":"27"},{"size":6671,"mtime":1613838792640,"results":"32","hashOfConfig":"27"},{"size":3700,"mtime":1613953801049,"results":"33","hashOfConfig":"27"},{"size":4473,"mtime":1612918386819,"results":"34","hashOfConfig":"27"},{"size":1913,"mtime":1612483722820,"results":"35","hashOfConfig":"27"},{"size":1882,"mtime":1613842799075,"results":"36","hashOfConfig":"27"},{"size":10510,"mtime":1613950449948,"results":"37","hashOfConfig":"27"},{"size":303,"mtime":1612489761834,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612489755730,"results":"39","hashOfConfig":"27"},{"size":4243,"mtime":1612489745946,"results":"40","hashOfConfig":"27"},{"size":4668,"mtime":1613955082976,"results":"41","hashOfConfig":"27"},{"size":799,"mtime":1613521660635,"results":"42","hashOfConfig":"27"},{"size":570,"mtime":1613614757713,"results":"43","hashOfConfig":"27"},{"size":565,"mtime":1613848634909,"results":"44","hashOfConfig":"27"},{"size":508,"mtime":1613840595817,"results":"45","hashOfConfig":"27"},{"size":523,"mtime":1613608541170,"results":"46","hashOfConfig":"27"},{"size":6054,"mtime":1613950277644,"results":"47","hashOfConfig":"27"},{"size":642,"mtime":1613847826265,"results":"48","hashOfConfig":"27"},{"size":166,"mtime":1613521524259,"results":"49","hashOfConfig":"27"},{"size":234,"mtime":1613519854524,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613606407990,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jmb3e1",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["109","110"],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["111","112"],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["113","114","115"],"import React, {Component} from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport {Button, Modal, ModalHeader, ModalBody,Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\n\n\n class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n}\n\ntoggleModal() {\n    this.setState({\n        isModalOpen: !this.state.isModalOpen\n    });\n}\n\nhandleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n}\n  render () {\n    return(\n      <div>\n      <Button outline onClick={this.toggleModal}>\n      <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n  </Button>\n  <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                    className=\"form-control\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                    placeholder=\"Your Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                      required, \n                                      minLength: minLength(2),\n                                      maxLength: maxLength(15)\n                                  }}\n                              />\n                                <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                    />\n                            </div>\n                            <Button type=\"submit\" color=\"primary\">\n                                Submit\n                            </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n    );\n  }\n\n }\n\n  function RenderCampsite ({campsite}) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n\n                }}>\n        <Card>\n        <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n          <CardBody>\n              <CardText>{campsite.description}</CardText>\n          </CardBody>\n        </Card>\n        </FadeTransform>\n      </div>\n    );\n  }\n\n  function RenderComments ({comments,postComment, campsiteId}) {\n    if (comments) {\n      return (\n        <div className=\"col-md-5 m-1\">\n          <h4> Comments</h4>\n          <Stagger in>\n                    {\n                      comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', \n                                            { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n <CommentForm campsiteId={campsiteId} postComment={postComment} />\n        </div>\n      );\n    }\n    return <div />;\n  }\n\n  function CampsiteInfo(props) {\n    if (props.campsite) {\n      return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>{props.campsite.name}</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                <RenderCampsite campsite={props.campsite} />\n                <RenderComments comments={props.comments} \n                postomment={props.postComment}\n                campsiteId={props.campsite.id}/>\n              \n            </div>\n        </div>\n      );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;\n\n\n  ","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["116","117","118","119","120","121","122"],"import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  constructor (props) {\n    super (props);\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phoneNum: '',\n      email: '',\n      agree: false,\n      contactType: 'By Phone',\n      feedback: '',\n      touched: {\n        firstName: false,\n        lastName: false,\n        phoneNum: false,\n        email: false\n    }\n    };\n\n    this.handleSubmit = this.handleSubmit.bind (this);\n  }\n  \n  handleSubmit(values) {\n    this.props.resetFeedbackForm();\n    this.props.postFeedback(values);\n  }\n\n\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>Contact Us</h2>\n            <hr />\n          </div>\n        </div>\n\n        <div className=\"row row-content align-items-center\">\n          <div className=\"col-sm-4\">\n            <h5>Our Address</h5>\n            <address>\n              1 Nucamp Way<br />\n              Seattle, WA 98001<br />\n              U.S.A.\n            </address>\n          </div>\n          <div className=\"col\">\n            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\">\n              <i className=\"fa fa-phone\" /> 1-206-555-1234\n            </a>\n            <br />\n            <a\n              role=\"button\"\n              className=\"btn btn-link\"\n              href=\"mailto:fakeemail@fakeemail.co\"\n            >\n              <i className=\"fa fa-envelope-o\" /> campsites@nucamp.co\n            </a>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h2>Send us your Feedback</h2>\n            <hr />\n          </div>\n          <div className=\"col-md-10\">\n          <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],["123","124"],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",["125"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderPartner  ({partner}) {  \n    if (partner) {\n        return (\n            <React.Fragment>\n                <Media object src={baseUrl + partner.image} alt={partner.name} width=\"150\"  />\n                <Media body className= \"ml-5 mb-4\" >\n                    <Media heading>{partner.name}</Media>\n                    {partner.description}\n                </Media>\n            </React.Fragment>\n        );\n    }  \n    return <div /> ;\n}\n\nfunction PartnerList(props) {\n    const partners = props.partners.partners.map(partner => {\n        return (\n            <Fade in >\n            <Media tag=\"li\" key={partner.id}> \n            <RenderPartner partner={partner} />\n            </Media>\n            </Fade>\n        );\n    });\n\n    if (props.partners.isLoading) {\n        return <Loading />;\n    }\n    if (props.partners.errMess) {\n        return (\n            <div className=\"col\">\n                <h4>{props.partners.errMess}</h4>\n            </div>\n        );\n    }\n    return (\n        <div className=\"col mt-4\">\n            \n            <Media list>\n            <Stagger in>\n                {partners}\n            </Stagger>   \n            </Media>\n            \n        </div>\n    );\n} \nfunction About(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We present a curated database of the best campsites in the vast woods and backcountry of the World Wide Web Wilderness. We increase access to adventure for the public while promoting safe and respectful use of resources. The expert wilderness trekkers on our staff personally verify each campsite to make sure that they are up to our standards. We also present a platform for campers to share reviews on campsites they have visited with each other.</p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">February 3, 2016</dd>\n                                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                                <dd className=\"col-6\">563</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">4388</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">42</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">I will not follow where the path may lead, but I will go where there is no path, and I will leave a trail.</p>\n                                <footer className=\"blockquote-footer\">Muriel Strode,{' '}\n                                    <cite title=\"Source Title\">\"Wind-Wafted Wild Flowers\" -\n                                    The Open Court, 1903</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>   \n            <PartnerList partners= {props.partners} /> \n            </div>\n        </div>\n    );\n}\n   \n   \nexport default About;","/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/user/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],["126","127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":47,"column":33,"nodeType":"136","endLine":48,"endColumn":62},{"ruleId":"134","severity":1,"message":"137","line":58,"column":33,"nodeType":"136","endLine":66,"endColumn":33},{"ruleId":"134","severity":1,"message":"138","line":81,"column":37,"nodeType":"136","endLine":84,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":89,"column":33,"nodeType":"136","endLine":97,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":114,"column":37,"nodeType":"136","endLine":122,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":139,"column":37,"nodeType":"136","endLine":148,"endColumn":39},{"ruleId":"134","severity":1,"message":"137","line":166,"column":37,"nodeType":"136","endLine":173,"endColumn":39},{"ruleId":"134","severity":1,"message":"139","line":190,"column":45,"nodeType":"136","endLine":194,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":200,"column":37,"nodeType":"136","endLine":201,"endColumn":66},{"ruleId":"134","severity":1,"message":"138","line":210,"column":37,"nodeType":"136","endLine":213,"endColumn":39},{"ruleId":"128","replacedBy":"140"},{"ruleId":"130","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":23},{"ruleId":"128","replacedBy":"146"},{"ruleId":"130","replacedBy":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],["148"],["149"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["148"],["149"],"no-unused-vars","'FadeTransform' is defined but never used.","Identifier","unusedVar",["148"],["149"],"no-global-assign","no-unsafe-negation"]